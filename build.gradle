plugins {
	id 'maven-publish'
	id 'fabric-loom' version '0.10-SNAPSHOT'
}

archivesBaseName = project.archives_base_name
version = project.version
group = project.maven_group

repositories {
	maven {
	    url 'https://api.modrinth.com/maven'
	    content {
		    includeGroup 'maven.modrinth'
	    }
	}
	maven {
		name = "TerraformersMC"
		url = "https://maven.terraformersmc.com/"
	}
	maven {
		name = "Ladysnake Libs"
		url = 'https://maven.ladysnake.org/releases'
	}

	maven { url 'https://maven.quiltmc.org/repository/snapshot' }
	maven { url 'https://jitpack.io' }
	maven { url "https://maven.shedaniel.me" }
	maven { url "https://maven.parchmentmc.org"}
	mavenCentral()
}

loom {
	accessWidenerPath = file("src/main/resources/malum.accesswidener")
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings loom.layered() {
		officialMojangMappings()
		parchment("org.parchmentmc.data:parchment-1.18.2:2022.11.06@zip")
	}
	//modImplementation(libs.cardinal.components.entity) {
	//	exclude group: "net.fabricmc"
	//	exclude group: "net.fabricmc.fabric-api"
	//}
	//modImplementation(libs.cardinal.components.base) {
	//	exclude group: "net.fabricmc"
	//	exclude group: "net.fabricmc.fabric-api"
	//}

	modImplementation "dev.emi:trinkets:${trinkets_version}"

	//midnightlib = { module = "maven.modrinth:midnightlib", version.ref = "midnightlib"}
	modImplementation "com.demonwav.mcdev:annotations:${annotations_version}"
	modImplementation "com.github.Chocohead:Fabric-ASM:${fabric_asm_version}"
	modImplementation "maven.modrinth:isnrmn:${isnrmn_version}"
	modImplementation "dev.emi:emi:${emi_version}" { transitive false }

	//modRuntimeOnly("maven.modrinth:sodium:mc1.19.3-0.4.6")
	//modRuntimeOnly("maven.modrinth:iris:1.19.3-v1.4.6")

	//runtimeOnly compileOnly("org.anarres:jcpp:1.4.14") // for iris

	//modImplementation include("com.github.Arathain:LodestoneLib-Quilt:1.19.3-SNAPSHOT")
	modImplementation include "com.github.DatCoder464:LodestoneLib-Fabric:1.18.2-SNAPSHOT"
	include "com.github.Chocohead:Fabric-ASM:${fabric_asm_version}"
	//include(libs.satin)

	implementation "com.github.LlamaLad7:MixinExtras:${mixin_extras_version}"
	include "com.github.LlamaLad7:MixinExtras:${mixin_extras_version}"

	annotationProcessor "com.github.LlamaLad7:MixinExtras:${mixin_extras_version}"
}

processResources {
	inputs.property "version", version

	filesMatching('quilt.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	repositories {

	}
}

wrapper {
	gradleVersion = "7.3.3"
	distributionType = Wrapper.DistributionType.ALL
}
